@import url("https://fonts.googleapis.com/css2?family=Roboto&display=swap");
@value boardHeight: 398px;

/* ________________DOESNT MATTER_________________*/

.wholeCenterWrapper {
  place-items: center;
  display: grid;
  left: 0%;
  right: 0%;
  top: 0%;
  bottom: 0%;
  position: fixed;
}

.boardGrid {
  display: grid;
  grid-template-columns: 200px 5% 600px 5% 400px;
  width: auto;
  height: auto;
  place-items: center;
  margin-right: auto;
  margin-left: auto;
}

.boardUIWrapper {
  width: 600px;
  height: 600px;
  background: rgb(255, 255, 255);
  border-radius: 2px;
  padding: 15px;
  display: grid;
  place-items: center;
}

.sideUIWrapper {
  width: 300px;
  height: 550px;
  background: transparent;
  border-radius: 2px;
  padding: 10px;
  border: 5px solid white;
  grid-template-rows: 50% 50%;
  place-items: center;
  margin: auto auto;
}

.textChatWrapper {
  margin: auto;
  border: 5px solid white;
  height: 95%;
  display: grid;
  grid-template-rows: 80% 20%;
}

.playerUIWrapper {
  width: 300px;
  height: calc(550px / 2);
}

.sendWrapper {
  grid-row: 2;
  width: auto;
  height: auto;
  border-top: 5px solid white;
  display: grid;
  grid-template-columns: 80% 20%;
}

.textChatArea {
  grid-column: 1;
  border: none;
  border-bottom: 3px solid white;
  background: none;
  font-family: "Roboto", sans-serif;
  color: #ffffff;
  font-size: 20px;
  margin-left: 10px;
  width: 80%;
  margin-right: auto;
  margin-bottom: 5px;
}

.textChatArea:focus {
  outline: none;
}

.textChatButton {
  border: none;
  grid-column: 2;
  width: 100%;
  height: 100%;
  margin: 0;
  background-size: 10px 10px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 30px;
  background-color: white;
  display: grid;
  place-items: center;
}

.textChatButton:focus {
  outline: none;
}

.sendImg {
  width: 35px;
  filter: invert(26%) sepia(88%) saturate(5620%) hue-rotate(251deg) brightness(100%) contrast(102%);
}

.msgsArea {
  grid-row: 1;
  padding: 5px;
  overflow-y: scroll;
}

.msgBackground {
  width: 85%;
  border: 3px solid white;
  padding: 8px;
  margin: 5px 5px auto auto;
  height: 70px;
  border-radius: 10px;
  display: grid;
  grid-template-rows: 28px;
}

.msgsArea::-webkit-scrollbar-track {
  border: none;
  padding: 2px 0;
  background-color: none;
  width: 1px;
}

.msgsArea::-webkit-scrollbar {
  width: 10px;
}

.msgsArea::-webkit-scrollbar-thumb {
  border-radius: 15px;
  background-color: #ffffff;
  border: 3px solid transparent;
  background-clip: content-box;
}

.msgUsername {
  font-family: "Roboto", sans-serif;
  color: #ffffff;
}

.msgParagraph {
  font-family: "Roboto", sans-serif;
  color: #ffffff;
  font-size: 14px;
  margin-block-start: 0px;
  margin-block-end: 0px;


}

.pieceDown1 {
  animation: pieceDown1 0.4s linear 0.5s 1 normal forwards;
  z-index: -1;
}

.gameBoard {
  width: 500px;
  z-index: 2;
}

.pieceArrGrid {
  width: 464px;
  height: 398px;
  display: grid;
  grid-template-columns: repeat(7, calc(100% / 7));
  grid-template-rows: repeat(6, calc(100% / 6));
  margin-bottom: 32px;
}

.gameBoard,
.pieceArrGrid {
  grid-column: 1;
  grid-row: 2;
}

.hoverButton {
  height: 398px;
  width: 100%;
  outline: none;
  border: none;
  background: none;
  z-index: 3;
}

.whosTurnFont {
  font-family: "Roboto", sans-serif;
  color: #ffffff;
  text-align: center;
  display: block;
}

.piecesBoardSeperator {
  display: grid;
  grid-template-rows: 70px 430px;
  place-items: center;
}

.piecesHolder {
  display: grid;
  grid-template-columns: repeat(7, calc(100% / 7));
  grid-column: 1;
  width: 464px;
  height: 64px;
}

.pieceDown1 {
  animation: pieceDown1 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown1 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(5 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(5 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.02)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(5 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(5 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.01)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(5 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}

.pieceDown2 {
  animation: pieceDown2 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown2 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(4 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(4 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.15)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(4 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(4 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.07)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(4 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}
.pieceDown3 {
  animation: pieceDown3 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown3 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(3 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(3 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.15)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(3 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(3 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.07)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(3 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}

.pieceDown4 {
  animation: pieceDown4 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown4 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(2 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(2 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.15)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(2 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(2 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.07)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(2 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}

.pieceDown5 {
  animation: pieceDown5 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown5 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(1 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(1 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.15)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(1 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(1 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.07)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(1 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}

.pieceDown6 {
  animation: pieceDown6 0.2s linear 0s 1 normal forwards;
  z-index: 0;
}

@keyframes pieceDown6 {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(calc(boardHeight - calc(0 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  60% {
    transform: translateY(calc(calc(boardHeight - calc(0 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.15)));
  }
  80% {
    transform: translateY(calc(calc(boardHeight - calc(0 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
  90% {
    transform: translateY(calc(calc(boardHeight - calc(0 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0.07)));
  }
  100% {
    transform: translateY(calc(calc(boardHeight - calc(0 * 66px)) - calc(calc(boardHeight - calc(0 * 66px)) * 0)));
  }
}
